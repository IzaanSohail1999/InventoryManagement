{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\izaan\\\\PhpstormProjects\\\\InventoryManagement\\\\invetory_system_frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const handleLogin = () => {\n    setLoggedIn(true);\n  };\n  const handleLogout = () => {\n    setLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this)\n  // <Router>\n  //     <div>\n  //         {isLoggedIn && <Navbar />}\n  //\n  //         <Routes>\n  //             <Route path=\"/\" component={Home} />\n  //             <Route\n  //                 path=\"/login\"\n  //                 render={(props) => <Login {...props} onLogin={handleLogin} />}\n  //             />\n  //         </Routes>\n  //\n  //         {isLoggedIn && (\n  //             <div>\n  //                 <p>User-specific content here.</p>\n  //                 <button onClick={handleLogout}>Logout</button>\n  //             </div>\n  //         )}\n  //     </div>\n  // </Router>\n  ;\n};\n_s(App, \"9ogPs/qKjoLSy/tthqIGD5LodSI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Link","Navbar","Home","Login","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setLoggedIn","handleLogin","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/izaan/PhpstormProjects/InventoryManagement/invetory_system_frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Login from './components/Login';\n\nconst App = () => {\n    const [isLoggedIn, setLoggedIn] = useState(false);\n\n    const handleLogin = () => {\n        setLoggedIn(true);\n    };\n\n    const handleLogout = () => {\n        setLoggedIn(false);\n    };\n\n    return (\n        <div>\n            Test\n        </div>\n        // <Router>\n        //     <div>\n        //         {isLoggedIn && <Navbar />}\n        //\n        //         <Routes>\n        //             <Route path=\"/\" component={Home} />\n        //             <Route\n        //                 path=\"/login\"\n        //                 render={(props) => <Login {...props} onLogin={handleLogin} />}\n        //             />\n        //         </Routes>\n        //\n        //         {isLoggedIn && (\n        //             <div>\n        //                 <p>User-specific content here.</p>\n        //                 <button onClick={handleLogout}>Logout</button>\n        //             </div>\n        //         )}\n        //     </div>\n        // </Router>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,QAAQ,kBAAkB;AAC/E,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,UAAU,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMe,WAAW,GAAGA,CAAA,KAAM;IACtBD,WAAW,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACvBF,WAAW,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACIJ,OAAA;IAAAO,QAAA,EAAK;EAEL;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK;EACL;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAER,CAAC;AAACT,EAAA,CApCID,GAAG;AAAAW,EAAA,GAAHX,GAAG;AAsCT,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}