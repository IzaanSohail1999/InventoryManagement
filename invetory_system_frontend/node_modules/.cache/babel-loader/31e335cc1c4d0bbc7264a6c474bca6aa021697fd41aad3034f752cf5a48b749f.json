{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\izaan\\\\PhpstormProjects\\\\InventoryManagement\\\\invetory_system_frontend\\\\src\\\\components\\\\Inventory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Inventory.css';\nimport { useUserContext } from '../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inventory = () => {\n  _s();\n  const {\n    user\n  } = useUserContext();\n  const [products, setProducts] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalMode, setModalMode] = useState('');\n  const [modalData, setModalData] = useState({\n    product_name: '',\n    quantity: '',\n    color: '',\n    size: '',\n    gender: '',\n    price: '',\n    category: '',\n    history: ''\n  });\n  const [isQuantityModalOpen, setIsQuantityModalOpen] = useState(false);\n  const [quantityModalProduct, setQuantityModalProduct] = useState(null);\n  const [quantity, setQuantity] = useState(0);\n  const [quantityAction, setQuantityAction] = useState('');\n  const [isOrderModalOpen, setIsOrderModalOpen] = useState(false);\n  const [orderProducts, setOrderProducts] = useState([]);\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/getAllProducts');\n      if (response.ok) {\n        const data = await response.json();\n        setProducts(data.products);\n      } else {\n        console.error('Failed to fetch products');\n      }\n    } catch (error) {\n      console.error('An error occurred during product data fetch:', error);\n    }\n  };\n  const handleModalOpen = (mode, data = {}) => {\n    setIsModalOpen(true);\n    setModalMode(mode);\n    setModalData(data);\n  };\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n    setModalMode('');\n    setModalData({\n      product_name: '',\n      quantity: '',\n      color: '',\n      size: '',\n      gender: '',\n      price: '',\n      category: '',\n      history: ''\n    });\n  };\n  const handleModalSave = async () => {\n    try {\n      let apiUrl = '';\n      let method = '';\n      if (modalMode === 'add') {\n        apiUrl = 'http://127.0.0.1:5000/api/insertData';\n        method = 'POST';\n      } else if (modalMode === 'edit') {\n        apiUrl = `http://127.0.0.1:5000/api/updateProduct/${modalData.product_id}`;\n        method = 'PUT';\n      }\n      const payload = modalMode === 'add' ? {\n        ...modalData,\n        history: ''\n      } // Set history to an empty string for 'add'\n      : {\n        ...modalData\n      }; // For 'edit', use the existing data without modifying history\n\n      const response = await fetch(apiUrl, {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (response.ok) {\n        console.log('Product saved successfully');\n        fetchProducts();\n        handleModalClose();\n      } else {\n        console.error('Failed to save product');\n      }\n    } catch (error) {\n      console.error('An error occurred during product save:', error);\n    }\n  };\n  const handleQuantityModalOpen = (product, action) => {\n    setQuantityModalProduct(product);\n    setQuantity(0);\n    setIsQuantityModalOpen(true);\n    setQuantityAction(action);\n  };\n  const handleQuantityModalClose = () => {\n    setQuantityModalProduct(null);\n    setIsQuantityModalOpen(false);\n    setQuantity(0);\n    setQuantityAction('');\n  };\n  const handleQuantityModalSave = async () => {\n    try {\n      const apiUrl = `http://127.0.0.1:5000/api/updateQuantity/${quantityModalProduct.product_id}`;\n      const payload = {\n        quantity: quantity,\n        action: quantityAction\n      };\n      const response = await fetch(apiUrl, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (response.ok) {\n        console.log('Quantity updated successfully');\n        fetchProducts();\n        handleQuantityModalClose();\n      } else {\n        console.error('Failed to update quantity');\n      }\n    } catch (error) {\n      console.error('An error occurred during quantity update:', error);\n    }\n  };\n  const handleDelete = async productId => {\n    try {\n      const apiUrl = `http://127.0.0.1:5000/api/deleteProduct/${productId}`;\n      const response = await fetch(apiUrl, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        console.log('Product deleted successfully');\n        fetchProducts();\n      } else {\n        console.error('Failed to delete product');\n      }\n    } catch (error) {\n      console.error('An error occurred during product deletion:', error);\n    }\n  };\n  const handleOrderModalOpen = () => {\n    // Fetch available products for ordering\n    setOrderProducts(products.filter(product => product.quantity > 0));\n    setIsOrderModalOpen(true);\n  };\n\n  // Function to close order modal\n  const handleOrderModalClose = () => {\n    setIsOrderModalOpen(false);\n    setOrderProducts([]);\n  };\n\n  // Function to submit order\n  const handleOrderSubmit = async () => {\n    try {\n      // Calculate total price\n      const totalPrice = orderProducts.reduce((total, product) => {\n        console.log(total, product.price, product.orderQuantity);\n        if (product.orderQuantity !== undefined) {\n          return total + product.price * product.orderQuantity;\n        }\n      }, 0);\n\n      // Create order payload\n      const orderPayload = {\n        user_id: user.id,\n        user_order: {\n          products: orderProducts.map(product => ({\n            product_id: product.product_id,\n            product_name: product.product_name,\n            price: product.price,\n            quantity: product.orderQuantity\n          }))\n        },\n        price: totalPrice\n      };\n\n      // Send API call to add order\n      const apiUrl = 'http://127.0.0.1:5000/api/addOrder';\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(orderPayload)\n      });\n      if (response.ok) {\n        console.log('Order placed successfully');\n        // You can add any additional logic here (e.g., reset order modal)\n      } else {\n        console.error('Failed to place order');\n      }\n    } catch (error) {\n      console.error('An error occurred during order placement:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inventory-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Inventory Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [user.role === \"Admin\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleModalOpen('add'),\n          children: \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 47\n        }, this), user.role !== \"Admin\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOrderModalOpen,\n          children: \"Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"inventory-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 21\n          }, this), user.role === \"Admin\" && /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.product_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this), user.role === \"Admin\" && /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleQuantityModalOpen(product, 'add'),\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleQuantityModalOpen(product, 'remove'),\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 56\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.size\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.gender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"history\",\n            children: product.history\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this), user.role === \"Admin\" && /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-button\",\n                onClick: () => handleModalOpen('edit', product),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-button\",\n                onClick: () => handleDelete(product.product_id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 51\n          }, this)]\n        }, product.product_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: handleModalClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: modalMode === 'add' ? 'Add Product' : 'Edit Product'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Product Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: modalData.product_name,\n              onChange: e => setModalData({\n                ...modalData,\n                product_name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Quantity:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: modalData.quantity,\n              onChange: e => setModalData({\n                ...modalData,\n                quantity: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Color:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: modalData.color,\n              onChange: e => setModalData({\n                ...modalData,\n                color: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Size:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: modalData.size,\n              onChange: e => setModalData({\n                ...modalData,\n                size: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Gender:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: modalData.gender,\n              onChange: e => setModalData({\n                ...modalData,\n                gender: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Price:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: modalData.price,\n              onChange: e => setModalData({\n                ...modalData,\n                price: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Category:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: modalData.category,\n              onChange: e => setModalData({\n                ...modalData,\n                category: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleModalSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 17\n    }, this), isQuantityModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: handleQuantityModalClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Update Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Quantity:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: quantity,\n            onChange: e => setQuantity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleQuantityModalSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 17\n    }, this), isOrderModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: handleOrderModalClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Place Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Product Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Available Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Order Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: orderProducts.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: product.product_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: product.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: product.orderQuantity || 0,\n                    onChange: e => {\n                      const quantity = parseInt(e.target.value, 10) || 0;\n                      setOrderProducts(prevProducts => prevProducts.map(prevProduct => prevProduct.product_id === product.product_id ? {\n                        ...prevProduct,\n                        orderQuantity: quantity\n                      } : prevProduct));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 41\n                }, this)]\n              }, product.product_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleOrderSubmit,\n            children: \"Place Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 9\n  }, this);\n};\n_s(Inventory, \"PNB9JW6leSnYMoVGrIc7HAkT1U8=\", false, function () {\n  return [useUserContext];\n});\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useState","useEffect","useUserContext","jsxDEV","_jsxDEV","Inventory","_s","user","products","setProducts","isModalOpen","setIsModalOpen","modalMode","setModalMode","modalData","setModalData","product_name","quantity","color","size","gender","price","category","history","isQuantityModalOpen","setIsQuantityModalOpen","quantityModalProduct","setQuantityModalProduct","setQuantity","quantityAction","setQuantityAction","isOrderModalOpen","setIsOrderModalOpen","orderProducts","setOrderProducts","fetchProducts","response","fetch","ok","data","json","console","error","handleModalOpen","mode","handleModalClose","handleModalSave","apiUrl","method","product_id","payload","headers","body","JSON","stringify","log","handleQuantityModalOpen","product","action","handleQuantityModalClose","handleQuantityModalSave","handleDelete","productId","handleOrderModalOpen","filter","handleOrderModalClose","handleOrderSubmit","totalPrice","reduce","total","orderQuantity","undefined","orderPayload","user_id","id","user_order","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onClick","type","value","onChange","e","target","parseInt","prevProducts","prevProduct","_c","$RefreshReg$"],"sources":["C:/Users/izaan/PhpstormProjects/InventoryManagement/invetory_system_frontend/src/components/Inventory.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './Inventory.css';\r\nimport {useUserContext} from '../context/UserContext';\r\n\r\n\r\nconst Inventory = () => {\r\n    const {user} = useUserContext();\r\n    const [products, setProducts] = useState([]);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [modalMode, setModalMode] = useState('');\r\n    const [modalData, setModalData] = useState({\r\n        product_name: '',\r\n        quantity: '',\r\n        color: '',\r\n        size: '',\r\n        gender: '',\r\n        price: '',\r\n        category: '',\r\n        history: '',\r\n    });\r\n    const [isQuantityModalOpen, setIsQuantityModalOpen] = useState(false);\r\n    const [quantityModalProduct, setQuantityModalProduct] = useState(null);\r\n    const [quantity, setQuantity] = useState(0);\r\n    const [quantityAction, setQuantityAction] = useState('');\r\n    const [isOrderModalOpen, setIsOrderModalOpen] = useState(false);\r\n    const [orderProducts, setOrderProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    const fetchProducts = async () => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:5000/api/getAllProducts');\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setProducts(data.products);\r\n            } else {\r\n                console.error('Failed to fetch products');\r\n            }\r\n        } catch (error) {\r\n            console.error('An error occurred during product data fetch:', error);\r\n        }\r\n    };\r\n\r\n    const handleModalOpen = (mode, data = {}) => {\r\n        setIsModalOpen(true);\r\n        setModalMode(mode);\r\n        setModalData(data);\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setIsModalOpen(false);\r\n        setModalMode('');\r\n        setModalData({\r\n            product_name: '',\r\n            quantity: '',\r\n            color: '',\r\n            size: '',\r\n            gender: '',\r\n            price: '',\r\n            category: '',\r\n            history: '',\r\n        });\r\n    };\r\n\r\n    const handleModalSave = async () => {\r\n        try {\r\n            let apiUrl = '';\r\n            let method = '';\r\n\r\n            if (modalMode === 'add') {\r\n                apiUrl = 'http://127.0.0.1:5000/api/insertData';\r\n                method = 'POST';\r\n            } else if (modalMode === 'edit') {\r\n                apiUrl = `http://127.0.0.1:5000/api/updateProduct/${modalData.product_id}`;\r\n                method = 'PUT';\r\n            }\r\n\r\n            const payload =\r\n                modalMode === 'add'\r\n                    ? {...modalData, history: ''} // Set history to an empty string for 'add'\r\n                    : {...modalData}; // For 'edit', use the existing data without modifying history\r\n\r\n            const response = await fetch(apiUrl, {\r\n                method: method,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('Product saved successfully');\r\n                fetchProducts();\r\n                handleModalClose();\r\n            } else {\r\n                console.error('Failed to save product');\r\n            }\r\n        } catch (error) {\r\n            console.error('An error occurred during product save:', error);\r\n        }\r\n    };\r\n\r\n    const handleQuantityModalOpen = (product, action) => {\r\n        setQuantityModalProduct(product);\r\n        setQuantity(0);\r\n        setIsQuantityModalOpen(true);\r\n        setQuantityAction(action)\r\n    };\r\n\r\n    const handleQuantityModalClose = () => {\r\n        setQuantityModalProduct(null);\r\n        setIsQuantityModalOpen(false);\r\n        setQuantity(0);\r\n        setQuantityAction('')\r\n    };\r\n\r\n    const handleQuantityModalSave = async () => {\r\n        try {\r\n            const apiUrl = `http://127.0.0.1:5000/api/updateQuantity/${quantityModalProduct.product_id}`;\r\n\r\n            const payload = {\r\n                quantity: quantity,\r\n                action: quantityAction,\r\n            };\r\n\r\n            const response = await fetch(apiUrl, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('Quantity updated successfully');\r\n                fetchProducts();\r\n                handleQuantityModalClose();\r\n            } else {\r\n                console.error('Failed to update quantity');\r\n            }\r\n        } catch (error) {\r\n            console.error('An error occurred during quantity update:', error);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (productId) => {\r\n        try {\r\n            const apiUrl = `http://127.0.0.1:5000/api/deleteProduct/${productId}`;\r\n\r\n            const response = await fetch(apiUrl, {\r\n                method: 'DELETE',\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('Product deleted successfully');\r\n                fetchProducts();\r\n            } else {\r\n                console.error('Failed to delete product');\r\n            }\r\n        } catch (error) {\r\n            console.error('An error occurred during product deletion:', error);\r\n        }\r\n    };\r\n\r\n    const handleOrderModalOpen = () => {\r\n        // Fetch available products for ordering\r\n        setOrderProducts(products.filter(product => product.quantity > 0));\r\n        setIsOrderModalOpen(true);\r\n    };\r\n\r\n    // Function to close order modal\r\n    const handleOrderModalClose = () => {\r\n        setIsOrderModalOpen(false);\r\n        setOrderProducts([]);\r\n    };\r\n\r\n    // Function to submit order\r\n    const handleOrderSubmit = async () => {\r\n        try {\r\n            // Calculate total price\r\n            const totalPrice = orderProducts.reduce((total, product) => {\r\n                console.log(total, product.price, product.orderQuantity)\r\n                if(product.orderQuantity !== undefined) {\r\n                    return total + (product.price * product.orderQuantity);\r\n                }\r\n            }, 0);\r\n\r\n            // Create order payload\r\n            const orderPayload = {\r\n                user_id: user.id,\r\n                user_order: {\r\n                    products: orderProducts.map(product => ({\r\n                        product_id: product.product_id,\r\n                        product_name: product.product_name,\r\n                        price: product.price,\r\n                        quantity: product.orderQuantity,\r\n                    })),\r\n                },\r\n                price: totalPrice,\r\n            };\r\n\r\n            // Send API call to add order\r\n            const apiUrl = 'http://127.0.0.1:5000/api/addOrder';\r\n            const response = await fetch(apiUrl, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(orderPayload),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('Order placed successfully');\r\n                // You can add any additional logic here (e.g., reset order modal)\r\n            } else {\r\n                console.error('Failed to place order');\r\n            }\r\n        } catch (error) {\r\n            console.error('An error occurred during order placement:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"inventory-container\">\r\n            <div className=\"row\">\r\n                <div className=\"column\">\r\n                    <h2>Inventory Page</h2>\r\n                </div>\r\n                <div className=\"column\">\r\n                    {user.role === \"Admin\" && <button onClick={() => handleModalOpen('add')}>\r\n                        Add Product\r\n                    </button>\r\n                    }\r\n                    {user.role !== \"Admin\" && <button  onClick={handleOrderModalOpen}>\r\n                        Order\r\n                    </button>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <table className=\"inventory-table\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Product Name</th>\r\n                    <th>Quantity</th>\r\n                    <th>Color</th>\r\n                    <th>Size</th>\r\n                    <th>Gender</th>\r\n                    <th>Price</th>\r\n                    <th>Category</th>\r\n                    <th>History</th>\r\n                    {user.role === \"Admin\" && <th>Actions</th>}\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {products.map((product) => (\r\n                    <tr key={product.product_id}>\r\n                        <td>{product.product_name}</td>\r\n                        <td>\r\n                            <td>\r\n                                {product.quantity}\r\n                            </td>\r\n                            {user.role === \"Admin\" && (<td>\r\n                                    <div>\r\n                                        <button onClick={() => handleQuantityModalOpen(product, 'add')}>\r\n                                            Add\r\n                                        </button>\r\n                                        <button onClick={() => handleQuantityModalOpen(product, 'remove')}>\r\n                                            Remove\r\n                                        </button>\r\n                                    </div>\r\n                                </td>\r\n                            )}\r\n                        </td>\r\n                        <td>{product.color}</td>\r\n                        <td>{product.size}</td>\r\n                        <td>{product.gender}</td>\r\n                        <td>{product.price}</td>\r\n                        <td>{product.category}</td>\r\n                        <td className=\"history\">{product.history}</td>\r\n                        {user.role === \"Admin\" && <td>\r\n                            <td>\r\n                                <button className=\"action-button\"\r\n                                        onClick={() => handleModalOpen('edit', product)}>Edit\r\n                                </button>\r\n                            </td>\r\n                            <td>\r\n                                <button className=\"action-button\"\r\n                                        onClick={() => handleDelete(product.product_id)}>Delete\r\n                                </button>\r\n                            </td>\r\n                        </td>\r\n                        }\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            {isModalOpen && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span className=\"close\" onClick={handleModalClose}>\r\n                            &times;\r\n                        </span>\r\n                        <h2>{modalMode === 'add' ? 'Add Product' : 'Edit Product'}</h2>\r\n                        <form>\r\n                            <label>\r\n                                Product Name:\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={modalData.product_name}\r\n                                    onChange={(e) =>\r\n                                        setModalData({\r\n                                            ...modalData,\r\n                                            product_name: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                            </label>\r\n\r\n                            {/* Add other input fields similarly */}\r\n                            <label>\r\n                                Quantity:\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={modalData.quantity}\r\n                                    onChange={(e) =>\r\n                                        setModalData({\r\n                                            ...modalData,\r\n                                            quantity: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                            </label>\r\n\r\n                            <label>\r\n                                Color:\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={modalData.color}\r\n                                    onChange={(e) =>\r\n                                        setModalData({\r\n                                            ...modalData,\r\n                                            color: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                            </label>\r\n\r\n                            <label>\r\n                                Size:\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={modalData.size}\r\n                                    onChange={(e) =>\r\n                                        setModalData({\r\n                                            ...modalData,\r\n                                            size: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                            </label>\r\n\r\n                            <label>\r\n                                Gender:\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={modalData.gender}\r\n                                    onChange={(e) =>\r\n                                        setModalData({\r\n                                            ...modalData,\r\n                                            gender: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                            </label>\r\n\r\n                            <label>\r\n                                Price:\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={modalData.price}\r\n                                    onChange={(e) =>\r\n                                        setModalData({\r\n                                            ...modalData,\r\n                                            price: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                            </label>\r\n\r\n                            <label>\r\n                                Category:\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={modalData.category}\r\n                                    onChange={(e) =>\r\n                                        setModalData({\r\n                                            ...modalData,\r\n                                            category: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                            </label>\r\n\r\n                            {/* Add more input fields... */}\r\n\r\n                            <button type=\"button\" onClick={handleModalSave}>\r\n                                Save\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {isQuantityModalOpen && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span className=\"close\" onClick={handleQuantityModalClose}>\r\n                            &times;\r\n                        </span>\r\n                        <h2>Update Quantity</h2>\r\n                        <label>\r\n                            Quantity:\r\n                            <input\r\n                                type=\"number\"\r\n                                value={quantity}\r\n                                onChange={(e) => setQuantity(e.target.value)}\r\n                            />\r\n                        </label>\r\n                        <button onClick={handleQuantityModalSave}>Save</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {isOrderModalOpen && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span className=\"close\" onClick={handleOrderModalClose}>\r\n                            &times;\r\n                        </span>\r\n                        <h2>Place Order</h2>\r\n                        <form>\r\n                            <table>\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Product Name</th>\r\n                                    <th>Available Quantity</th>\r\n                                    <th>Order Quantity</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {orderProducts.map(product => (\r\n                                    <tr key={product.product_id}>\r\n                                        <td>{product.product_name}</td>\r\n                                        <td>{product.quantity}</td>\r\n                                        <td>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                value={product.orderQuantity || 0}\r\n                                                onChange={(e) => {\r\n                                                    const quantity = parseInt(e.target.value, 10) || 0;\r\n                                                    setOrderProducts(prevProducts =>\r\n                                                        prevProducts.map(prevProduct =>\r\n                                                            prevProduct.product_id === product.product_id\r\n                                                                ? { ...prevProduct, orderQuantity: quantity }\r\n                                                                : prevProduct\r\n                                                        )\r\n                                                    );\r\n                                                }}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <button type=\"button\" onClick={handleOrderSubmit}>\r\n                                Place Order\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Inventory;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}