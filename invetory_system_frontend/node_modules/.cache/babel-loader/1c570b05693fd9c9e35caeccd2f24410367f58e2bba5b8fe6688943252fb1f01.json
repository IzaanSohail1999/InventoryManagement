{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\izaan\\\\PhpstormProjects\\\\InventoryManagement\\\\invetory_system_frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport User from \"./components/User\";\nimport LoginPage from \"./components/LoginPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [initialPage, setInitialPage] = useState('/login');\n  const handleLogin = () => {\n    // Perform your login logic here\n    // For simplicity, let's assume a successful login by setting isLoggedIn to true\n    setLoggedIn(true);\n    setInitialPage('/');\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: initialPage,\n        element: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 52\n        }, this),\n        children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            index: true,\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"user\",\n            element: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"login\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"HyedgsLsrSfIC5lEWIBnFdjkaCM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Routes","Route","Navigate","Navbar","Home","User","LoginPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setLoggedIn","initialPage","setInitialPage","handleLogin","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","index","to","replace","onLogin","_c","$RefreshReg$"],"sources":["C:/Users/izaan/PhpstormProjects/InventoryManagement/invetory_system_frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport User from \"./components/User\";\nimport LoginPage from \"./components/LoginPage\"\n\nconst App = () => {\n    const [isLoggedIn, setLoggedIn] = useState(false);\n    const [initialPage, setInitialPage] = useState('/login');\n\n    const handleLogin = () => {\n        // Perform your login logic here\n        // For simplicity, let's assume a successful login by setting isLoggedIn to true\n        setLoggedIn(true);\n        setInitialPage('/');\n    };\n    return (\n        <BrowserRouter>\n            <Routes>\n                <Route path={initialPage} element={<Navbar />}>\n                    {isLoggedIn ? (\n                        <>\n                            <Route index element={<Home />} />\n                            <Route path=\"user\" element={<User />} />\n                        </>\n                    ) : (\n                        <Navigate to=\"/login\" replace />\n                    )}\n                </Route>\n                <Route path=\"login\" element={<LoginPage onLogin={handleLogin} />} />\n            </Routes>\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACzE,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,SAAS,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,UAAU,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,QAAQ,CAAC;EAExD,MAAMmB,WAAW,GAAGA,CAAA,KAAM;IACtB;IACA;IACAH,WAAW,CAAC,IAAI,CAAC;IACjBE,cAAc,CAAC,GAAG,CAAC;EACvB,CAAC;EACD,oBACIR,OAAA,CAACT,aAAa;IAAAmB,QAAA,eACVV,OAAA,CAACR,MAAM;MAAAkB,QAAA,gBACHV,OAAA,CAACP,KAAK;QAACkB,IAAI,EAAEJ,WAAY;QAACK,OAAO,eAAEZ,OAAA,CAACL,MAAM;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAAAN,QAAA,EACzCL,UAAU,gBACPL,OAAA,CAAAE,SAAA;UAAAQ,QAAA,gBACIV,OAAA,CAACP,KAAK;YAACwB,KAAK;YAACL,OAAO,eAAEZ,OAAA,CAACJ,IAAI;cAAAiB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClChB,OAAA,CAACP,KAAK;YAACkB,IAAI,EAAC,MAAM;YAACC,OAAO,eAAEZ,OAAA,CAACH,IAAI;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,eAC1C,CAAC,gBAEHhB,OAAA,CAACN,QAAQ;UAACwB,EAAE,EAAC,QAAQ;UAACC,OAAO;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAClC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACRhB,OAAA,CAACP,KAAK;QAACkB,IAAI,EAAC,OAAO;QAACC,OAAO,eAAEZ,OAAA,CAACF,SAAS;UAACsB,OAAO,EAAEX;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAExB,CAAC;AAACZ,EAAA,CA3BID,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA6BT,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}