{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\izaan\\\\PhpstormProjects\\\\InventoryManagement\\\\invetory_system_frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport User from \"./components/User\";\nimport LoginPage from \"./components/LoginPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [initialPage, setInitialPage] = useState('/login');\n  const handleLogin = () => {\n    // Perform your login logic here\n    // For simplicity, let's assume a successful login by setting isLoggedIn to true\n    setLoggedIn(true);\n    setInitialPage('/');\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [isLoggedIn && /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"home\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"user\",\n        element: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"HyedgsLsrSfIC5lEWIBnFdjkaCM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Routes","Route","Navbar","Home","User","LoginPage","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setLoggedIn","initialPage","setInitialPage","handleLogin","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onLogin","_c","$RefreshReg$"],"sources":["C:/Users/izaan/PhpstormProjects/InventoryManagement/invetory_system_frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport User from \"./components/User\";\nimport LoginPage from \"./components/LoginPage\"\n\nconst App = () => {\n    const [isLoggedIn, setLoggedIn] = useState(false);\n    const [initialPage, setInitialPage] = useState('/login');\n\n    const handleLogin = () => {\n        // Perform your login logic here\n        // For simplicity, let's assume a successful login by setting isLoggedIn to true\n        setLoggedIn(true);\n        setInitialPage('/');\n    };\n    return (\n        <BrowserRouter>\n            {isLoggedIn && <Navbar />}\n            <Routes>\n                <Route path=\"/\" element={<LoginPage onLogin={handleLogin} />} />\n                <Route path=\"home\" element={<Home />} />\n                <Route path=\"user\" element={<User />} />\n            </Routes>\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC/D,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,SAAS,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,UAAU,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,QAAQ,CAAC;EAExD,MAAMgB,WAAW,GAAGA,CAAA,KAAM;IACtB;IACA;IACAH,WAAW,CAAC,IAAI,CAAC;IACjBE,cAAc,CAAC,GAAG,CAAC;EACvB,CAAC;EACD,oBACIN,OAAA,CAACR,aAAa;IAAAgB,QAAA,GACTL,UAAU,iBAAIH,OAAA,CAACL,MAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzBZ,OAAA,CAACP,MAAM;MAAAe,QAAA,gBACHR,OAAA,CAACN,KAAK;QAACmB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEd,OAAA,CAACF,SAAS;UAACiB,OAAO,EAAER;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChEZ,OAAA,CAACN,KAAK;QAACmB,IAAI,EAAC,MAAM;QAACC,OAAO,eAAEd,OAAA,CAACJ,IAAI;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxCZ,OAAA,CAACN,KAAK;QAACmB,IAAI,EAAC,MAAM;QAACC,OAAO,eAAEd,OAAA,CAACH,IAAI;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAExB,CAAC;AAACV,EAAA,CApBID,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAsBT,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}