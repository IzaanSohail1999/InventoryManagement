{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\izaan\\\\PhpstormProjects\\\\InventoryManagement\\\\invetory_system_frontend\\\\src\\\\components\\\\Inventory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Inventory.css';\nimport { useUserContext } from '../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inventory = () => {\n  _s();\n  const {\n    user\n  } = useUserContext();\n  const [products, setProducts] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalMode, setModalMode] = useState('');\n  const [modalData, setModalData] = useState({\n    product_name: '',\n    quantity: '',\n    color: '',\n    size: '',\n    gender: '',\n    price: '',\n    category: '',\n    history: ''\n  });\n  const [isQuantityModalOpen, setIsQuantityModalOpen] = useState(false);\n  const [quantityModalProduct, setQuantityModalProduct] = useState(null);\n  const [quantity, setQuantity] = useState(0);\n  const [quantityAction, setQuantityAction] = useState('');\n  const [isOrderModalOpen, setIsOrderModalOpen] = useState(false);\n  const [orderProducts, setOrderProducts] = useState([]);\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/getAllProducts');\n      if (response.ok) {\n        const data = await response.json();\n        setProducts(data.products);\n      } else {\n        console.error('Failed to fetch products');\n      }\n    } catch (error) {\n      console.error('An error occurred during product data fetch:', error);\n    }\n  };\n  const handleModalOpen = (mode, data = {}) => {\n    setIsModalOpen(true);\n    setModalMode(mode);\n    setModalData(data);\n  };\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n    setModalMode('');\n    setModalData({\n      product_name: '',\n      quantity: '',\n      color: '',\n      size: '',\n      gender: '',\n      price: '',\n      category: '',\n      history: ''\n    });\n  };\n  const handleModalSave = async () => {\n    try {\n      let apiUrl = '';\n      let method = '';\n      if (modalMode === 'add') {\n        apiUrl = 'http://127.0.0.1:5000/api/insertData';\n        method = 'POST';\n      } else if (modalMode === 'edit') {\n        apiUrl = `http://127.0.0.1:5000/api/updateProduct/${modalData.product_id}`;\n        method = 'PUT';\n      }\n      const payload = modalMode === 'add' ? {\n        ...modalData,\n        history: ''\n      } // Set history to an empty string for 'add'\n      : {\n        ...modalData\n      }; // For 'edit', use the existing data without modifying history\n\n      const response = await fetch(apiUrl, {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (response.ok) {\n        console.log('Product saved successfully');\n        fetchProducts();\n        handleModalClose();\n      } else {\n        console.error('Failed to save product');\n      }\n    } catch (error) {\n      console.error('An error occurred during product save:', error);\n    }\n  };\n  const handleQuantityModalOpen = (product, action) => {\n    setQuantityModalProduct(product);\n    setQuantity(0);\n    setIsQuantityModalOpen(true);\n    setQuantityAction(action);\n  };\n  const handleQuantityModalClose = () => {\n    setQuantityModalProduct(null);\n    setIsQuantityModalOpen(false);\n    setQuantity(0);\n    setQuantityAction('');\n  };\n  const handleQuantityModalSave = async () => {\n    try {\n      const apiUrl = `http://127.0.0.1:5000/api/updateQuantity/${quantityModalProduct.product_id}`;\n      const payload = {\n        quantity: quantity,\n        action: quantityAction\n      };\n      const response = await fetch(apiUrl, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (response.ok) {\n        console.log('Quantity updated successfully');\n        fetchProducts();\n        handleQuantityModalClose();\n      } else {\n        console.error('Failed to update quantity');\n      }\n    } catch (error) {\n      console.error('An error occurred during quantity update:', error);\n    }\n  };\n  const handleDelete = async productId => {\n    try {\n      const apiUrl = `http://127.0.0.1:5000/api/deleteProduct/${productId}`;\n      const response = await fetch(apiUrl, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        console.log('Product deleted successfully');\n        fetchProducts();\n      } else {\n        console.error('Failed to delete product');\n      }\n    } catch (error) {\n      console.error('An error occurred during product deletion:', error);\n    }\n  };\n  const handleOrderModalOpen = () => {\n    setOrderProducts(products.filter(product => product.quantity > 0));\n    setIsOrderModalOpen(true);\n  };\n\n  // const handleOrderModalClose = () => {\n  //     setIsOrderModalOpen(false);\n  //     setOrderProducts([]);\n  // };\n  //\n  // // Function to submit order\n  // const handleOrderSubmit = async () => {\n  //     try {\n  //         const validOrderProducts = orderProducts.filter(product => product.orderQuantity !== undefined && product.orderQuantity > 0);\n  //\n  //         const totalPrice = validOrderProducts.reduce((total, product) => {\n  //             return total + product.price * product.orderQuantity;\n  //         }, 0);\n  //\n  //         const orderPayload = {\n  //             user_id: user.id,\n  //             user_order: {\n  //                 products: orderProducts.map(product => ({\n  //                     product_id: product.product_id,\n  //                     product_name: product.product_name,\n  //                     price: product.price,\n  //                     quantity: product.orderQuantity,\n  //                 })),\n  //             },\n  //             price: totalPrice,\n  //         };\n  //\n  //         const apiUrl = 'http://127.0.0.1:5000/api/addOrder';\n  //         const response = await fetch(apiUrl, {\n  //             method: 'POST',\n  //             headers: {\n  //                 'Content-Type': 'application/json',\n  //             },\n  //             body: JSON.stringify(orderPayload),\n  //         });\n  //\n  //         if (response.ok) {\n  //             console.log('Order placed successfully');\n  //             handleOrderModalClose();\n  //         } else {\n  //             console.error('Failed to place order');\n  //         }\n  //     } catch (error) {\n  //         console.error('An error occurred during order placement:', error);\n  //     }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inventory-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Inventory Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [user.role === \"Admin\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleModalOpen('add'),\n          children: \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 47\n        }, this), user.role !== \"Admin\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOrderModalOpen,\n          children: \"Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"inventory-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 21\n          }, this), user.role === \"Admin\" && /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.product_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this), user.role === \"Admin\" && /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleQuantityModalOpen(product, 'add'),\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleQuantityModalOpen(product, 'remove'),\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.size\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.gender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"history\",\n            children: product.history\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this), user.role === \"Admin\" && /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-button\",\n                onClick: () => handleModalOpen('edit', product),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-button\",\n                onClick: () => handleDelete(product.product_id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 51\n          }, this)]\n        }, product.product_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this), isQuantityModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: handleQuantityModalClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Update Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Quantity:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: quantity,\n            onChange: e => setQuantity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleQuantityModalSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 9\n  }, this);\n};\n_s(Inventory, \"PNB9JW6leSnYMoVGrIc7HAkT1U8=\", false, function () {\n  return [useUserContext];\n});\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useState","useEffect","useUserContext","jsxDEV","_jsxDEV","Inventory","_s","user","products","setProducts","isModalOpen","setIsModalOpen","modalMode","setModalMode","modalData","setModalData","product_name","quantity","color","size","gender","price","category","history","isQuantityModalOpen","setIsQuantityModalOpen","quantityModalProduct","setQuantityModalProduct","setQuantity","quantityAction","setQuantityAction","isOrderModalOpen","setIsOrderModalOpen","orderProducts","setOrderProducts","fetchProducts","response","fetch","ok","data","json","console","error","handleModalOpen","mode","handleModalClose","handleModalSave","apiUrl","method","product_id","payload","headers","body","JSON","stringify","log","handleQuantityModalOpen","product","action","handleQuantityModalClose","handleQuantityModalSave","handleDelete","productId","handleOrderModalOpen","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onClick","map","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/izaan/PhpstormProjects/InventoryManagement/invetory_system_frontend/src/components/Inventory.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './Inventory.css';\r\nimport {useUserContext} from '../context/UserContext';\r\n\r\n\r\nconst Inventory = () => {\r\n    const {user} = useUserContext();\r\n    const [products, setProducts] = useState([]);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [modalMode, setModalMode] = useState('');\r\n    const [modalData, setModalData] = useState({\r\n        product_name: '',\r\n        quantity: '',\r\n        color: '',\r\n        size: '',\r\n        gender: '',\r\n        price: '',\r\n        category: '',\r\n        history: '',\r\n    });\r\n    const [isQuantityModalOpen, setIsQuantityModalOpen] = useState(false);\r\n    const [quantityModalProduct, setQuantityModalProduct] = useState(null);\r\n    const [quantity, setQuantity] = useState(0);\r\n    const [quantityAction, setQuantityAction] = useState('');\r\n    const [isOrderModalOpen, setIsOrderModalOpen] = useState(false);\r\n    const [orderProducts, setOrderProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    const fetchProducts = async () => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:5000/api/getAllProducts');\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setProducts(data.products);\r\n            } else {\r\n                console.error('Failed to fetch products');\r\n            }\r\n        } catch (error) {\r\n            console.error('An error occurred during product data fetch:', error);\r\n        }\r\n    };\r\n\r\n    const handleModalOpen = (mode, data = {}) => {\r\n        setIsModalOpen(true);\r\n        setModalMode(mode);\r\n        setModalData(data);\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setIsModalOpen(false);\r\n        setModalMode('');\r\n        setModalData({\r\n            product_name: '',\r\n            quantity: '',\r\n            color: '',\r\n            size: '',\r\n            gender: '',\r\n            price: '',\r\n            category: '',\r\n            history: '',\r\n        });\r\n    };\r\n\r\n    const handleModalSave = async () => {\r\n        try {\r\n            let apiUrl = '';\r\n            let method = '';\r\n\r\n            if (modalMode === 'add') {\r\n                apiUrl = 'http://127.0.0.1:5000/api/insertData';\r\n                method = 'POST';\r\n            } else if (modalMode === 'edit') {\r\n                apiUrl = `http://127.0.0.1:5000/api/updateProduct/${modalData.product_id}`;\r\n                method = 'PUT';\r\n            }\r\n\r\n            const payload =\r\n                modalMode === 'add'\r\n                    ? {...modalData, history: ''} // Set history to an empty string for 'add'\r\n                    : {...modalData}; // For 'edit', use the existing data without modifying history\r\n\r\n            const response = await fetch(apiUrl, {\r\n                method: method,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('Product saved successfully');\r\n                fetchProducts();\r\n                handleModalClose();\r\n            } else {\r\n                console.error('Failed to save product');\r\n            }\r\n        } catch (error) {\r\n            console.error('An error occurred during product save:', error);\r\n        }\r\n    };\r\n\r\n    const handleQuantityModalOpen = (product, action) => {\r\n        setQuantityModalProduct(product);\r\n        setQuantity(0);\r\n        setIsQuantityModalOpen(true);\r\n        setQuantityAction(action)\r\n    };\r\n\r\n    const handleQuantityModalClose = () => {\r\n        setQuantityModalProduct(null);\r\n        setIsQuantityModalOpen(false);\r\n        setQuantity(0);\r\n        setQuantityAction('')\r\n    };\r\n\r\n    const handleQuantityModalSave = async () => {\r\n        try {\r\n            const apiUrl = `http://127.0.0.1:5000/api/updateQuantity/${quantityModalProduct.product_id}`;\r\n\r\n            const payload = {\r\n                quantity: quantity,\r\n                action: quantityAction,\r\n            };\r\n\r\n            const response = await fetch(apiUrl, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('Quantity updated successfully');\r\n                fetchProducts();\r\n                handleQuantityModalClose();\r\n            } else {\r\n                console.error('Failed to update quantity');\r\n            }\r\n        } catch (error) {\r\n            console.error('An error occurred during quantity update:', error);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (productId) => {\r\n        try {\r\n            const apiUrl = `http://127.0.0.1:5000/api/deleteProduct/${productId}`;\r\n\r\n            const response = await fetch(apiUrl, {\r\n                method: 'DELETE',\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('Product deleted successfully');\r\n                fetchProducts();\r\n            } else {\r\n                console.error('Failed to delete product');\r\n            }\r\n        } catch (error) {\r\n            console.error('An error occurred during product deletion:', error);\r\n        }\r\n    };\r\n\r\n    const handleOrderModalOpen = () => {\r\n        setOrderProducts(products.filter(product => product.quantity > 0));\r\n        setIsOrderModalOpen(true);\r\n    };\r\n\r\n    // const handleOrderModalClose = () => {\r\n    //     setIsOrderModalOpen(false);\r\n    //     setOrderProducts([]);\r\n    // };\r\n    //\r\n    // // Function to submit order\r\n    // const handleOrderSubmit = async () => {\r\n    //     try {\r\n    //         const validOrderProducts = orderProducts.filter(product => product.orderQuantity !== undefined && product.orderQuantity > 0);\r\n    //\r\n    //         const totalPrice = validOrderProducts.reduce((total, product) => {\r\n    //             return total + product.price * product.orderQuantity;\r\n    //         }, 0);\r\n    //\r\n    //         const orderPayload = {\r\n    //             user_id: user.id,\r\n    //             user_order: {\r\n    //                 products: orderProducts.map(product => ({\r\n    //                     product_id: product.product_id,\r\n    //                     product_name: product.product_name,\r\n    //                     price: product.price,\r\n    //                     quantity: product.orderQuantity,\r\n    //                 })),\r\n    //             },\r\n    //             price: totalPrice,\r\n    //         };\r\n    //\r\n    //         const apiUrl = 'http://127.0.0.1:5000/api/addOrder';\r\n    //         const response = await fetch(apiUrl, {\r\n    //             method: 'POST',\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json',\r\n    //             },\r\n    //             body: JSON.stringify(orderPayload),\r\n    //         });\r\n    //\r\n    //         if (response.ok) {\r\n    //             console.log('Order placed successfully');\r\n    //             handleOrderModalClose();\r\n    //         } else {\r\n    //             console.error('Failed to place order');\r\n    //         }\r\n    //     } catch (error) {\r\n    //         console.error('An error occurred during order placement:', error);\r\n    //     }\r\n    // };\r\n\r\n    return (\r\n        <div className=\"inventory-container\">\r\n            <div className=\"row\">\r\n                <div className=\"column\">\r\n                    <h2>Inventory Page</h2>\r\n                </div>\r\n                <div className=\"column\">\r\n                    {user.role === \"Admin\" && <button onClick={() => handleModalOpen('add')}>\r\n                        Add Product\r\n                    </button>\r\n                    }\r\n                    {user.role !== \"Admin\" && <button onClick={handleOrderModalOpen}>\r\n                        Order\r\n                    </button>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <table className=\"inventory-table\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Product Name</th>\r\n                    <th>Quantity</th>\r\n                    <th>Color</th>\r\n                    <th>Size</th>\r\n                    <th>Gender</th>\r\n                    <th>Price</th>\r\n                    <th>Category</th>\r\n                    <th>History</th>\r\n                    {user.role === \"Admin\" && <th>Actions</th>}\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {products.map((product) => (\r\n                    <tr key={product.product_id}>\r\n                        <td>{product.product_name}</td>\r\n                        <td>\r\n                            <td>\r\n                                {product.quantity}\r\n                            </td>\r\n                            {user.role === \"Admin\" && ( <td>\r\n                                    <td>\r\n                                    <button onClick={() => handleQuantityModalOpen(product, 'add')}>\r\n                                        Add\r\n                                    </button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <button onClick={() => handleQuantityModalOpen(product, 'remove')}>\r\n                                        Remove\r\n                                    </button>\r\n                                    </td>\r\n                                </td>\r\n                            )}\r\n                        </td>\r\n                        <td>{product.color}</td>\r\n                        <td>{product.size}</td>\r\n                        <td>{product.gender}</td>\r\n                        <td>{product.price}</td>\r\n                        <td>{product.category}</td>\r\n                        <td className=\"history\">{product.history}</td>\r\n                        {user.role === \"Admin\" && <td>\r\n                            <td>\r\n                                <button className=\"action-button\"\r\n                                        onClick={() => handleModalOpen('edit', product)}>Edit\r\n                                </button>\r\n                            </td>\r\n                            <td>\r\n                                <button className=\"action-button\"\r\n                                        onClick={() => handleDelete(product.product_id)}>Delete\r\n                                </button>\r\n                            </td>\r\n                        </td>\r\n                        }\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            {/*{isModalOpen && (*/}\r\n            {/*    <div className=\"modal\">*/}\r\n            {/*        <div className=\"modal-content\">*/}\r\n            {/*            <span className=\"close\" onClick={handleModalClose}>*/}\r\n            {/*                &times;*/}\r\n            {/*            </span>*/}\r\n            {/*            <h2>{modalMode === 'add' ? 'Add Product' : 'Edit Product'}</h2>*/}\r\n            {/*            <form>*/}\r\n            {/*                <label>*/}\r\n            {/*                    Product Name:*/}\r\n            {/*                    <input*/}\r\n            {/*                        type=\"text\"*/}\r\n            {/*                        value={modalData.product_name}*/}\r\n            {/*                        onChange={(e) =>*/}\r\n            {/*                            setModalData({*/}\r\n            {/*                                ...modalData,*/}\r\n            {/*                                product_name: e.target.value,*/}\r\n            {/*                            })*/}\r\n            {/*                        }*/}\r\n            {/*                    />*/}\r\n            {/*                </label>*/}\r\n\r\n            {/*                /!* Add other input fields similarly *!/*/}\r\n            {/*                <label>*/}\r\n            {/*                    Quantity:*/}\r\n            {/*                    <input*/}\r\n            {/*                        type=\"number\"*/}\r\n            {/*                        value={modalData.quantity}*/}\r\n            {/*                        onChange={(e) =>*/}\r\n            {/*                            setModalData({*/}\r\n            {/*                                ...modalData,*/}\r\n            {/*                                quantity: e.target.value,*/}\r\n            {/*                            })*/}\r\n            {/*                        }*/}\r\n            {/*                    />*/}\r\n            {/*                </label>*/}\r\n\r\n            {/*                <label>*/}\r\n            {/*                    Color:*/}\r\n            {/*                    <input*/}\r\n            {/*                        type=\"text\"*/}\r\n            {/*                        value={modalData.color}*/}\r\n            {/*                        onChange={(e) =>*/}\r\n            {/*                            setModalData({*/}\r\n            {/*                                ...modalData,*/}\r\n            {/*                                color: e.target.value,*/}\r\n            {/*                            })*/}\r\n            {/*                        }*/}\r\n            {/*                    />*/}\r\n            {/*                </label>*/}\r\n\r\n            {/*                <label>*/}\r\n            {/*                    Size:*/}\r\n            {/*                    <input*/}\r\n            {/*                        type=\"text\"*/}\r\n            {/*                        value={modalData.size}*/}\r\n            {/*                        onChange={(e) =>*/}\r\n            {/*                            setModalData({*/}\r\n            {/*                                ...modalData,*/}\r\n            {/*                                size: e.target.value,*/}\r\n            {/*                            })*/}\r\n            {/*                        }*/}\r\n            {/*                    />*/}\r\n            {/*                </label>*/}\r\n\r\n            {/*                <label>*/}\r\n            {/*                    Gender:*/}\r\n            {/*                    <input*/}\r\n            {/*                        type=\"text\"*/}\r\n            {/*                        value={modalData.gender}*/}\r\n            {/*                        onChange={(e) =>*/}\r\n            {/*                            setModalData({*/}\r\n            {/*                                ...modalData,*/}\r\n            {/*                                gender: e.target.value,*/}\r\n            {/*                            })*/}\r\n            {/*                        }*/}\r\n            {/*                    />*/}\r\n            {/*                </label>*/}\r\n\r\n            {/*                <label>*/}\r\n            {/*                    Price:*/}\r\n            {/*                    <input*/}\r\n            {/*                        type=\"number\"*/}\r\n            {/*                        value={modalData.price}*/}\r\n            {/*                        onChange={(e) =>*/}\r\n            {/*                            setModalData({*/}\r\n            {/*                                ...modalData,*/}\r\n            {/*                                price: e.target.value,*/}\r\n            {/*                            })*/}\r\n            {/*                        }*/}\r\n            {/*                    />*/}\r\n            {/*                </label>*/}\r\n\r\n            {/*                <label>*/}\r\n            {/*                    Category:*/}\r\n            {/*                    <input*/}\r\n            {/*                        type=\"text\"*/}\r\n            {/*                        value={modalData.category}*/}\r\n            {/*                        onChange={(e) =>*/}\r\n            {/*                            setModalData({*/}\r\n            {/*                                ...modalData,*/}\r\n            {/*                                category: e.target.value,*/}\r\n            {/*                            })*/}\r\n            {/*                        }*/}\r\n            {/*                    />*/}\r\n            {/*                </label>*/}\r\n\r\n            {/*                /!* Add more input fields... *!/*/}\r\n\r\n            {/*                <button type=\"button\" onClick={handleModalSave}>*/}\r\n            {/*                    Save*/}\r\n            {/*                </button>*/}\r\n            {/*            </form>*/}\r\n            {/*        </div>*/}\r\n            {/*    </div>*/}\r\n            {/*)}*/}\r\n\r\n            {isQuantityModalOpen && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span className=\"close\" onClick={handleQuantityModalClose}>\r\n                            &times;\r\n                        </span>\r\n                        <h2>Update Quantity</h2>\r\n                        <label>\r\n                            Quantity:\r\n                            <input\r\n                                type=\"number\"\r\n                                value={quantity}\r\n                                onChange={(e) => setQuantity(e.target.value)}\r\n                            />\r\n                        </label>\r\n                        <button onClick={handleQuantityModalSave}>Save</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/*{isOrderModalOpen && (*/}\r\n            {/*    <div className=\"modal\">*/}\r\n            {/*        <div className=\"modal-content\">*/}\r\n            {/*            <span className=\"close\" onClick={handleOrderModalClose}>*/}\r\n            {/*                &times;*/}\r\n            {/*            </span>*/}\r\n            {/*            <h2>Place Order</h2>*/}\r\n            {/*            <form>*/}\r\n            {/*                <table>*/}\r\n            {/*                    <thead>*/}\r\n            {/*                    <tr>*/}\r\n            {/*                        <th>Product Name</th>*/}\r\n            {/*                        <th>Available Quantity</th>*/}\r\n            {/*                        <th>Order Quantity</th>*/}\r\n            {/*                    </tr>*/}\r\n            {/*                    </thead>*/}\r\n            {/*                    <tbody>*/}\r\n            {/*                    {orderProducts.map(product => (*/}\r\n            {/*                        <tr key={product.product_id}>*/}\r\n            {/*                            <td>{product.product_name}</td>*/}\r\n            {/*                            <td>{product.quantity}</td>*/}\r\n            {/*                            <td>*/}\r\n            {/*                                <input*/}\r\n            {/*                                    type=\"number\"*/}\r\n            {/*                                    value={product.orderQuantity || 0}*/}\r\n            {/*                                    onChange={(e) => {*/}\r\n            {/*                                        const quantity = parseInt(e.target.value, 10) || 0;*/}\r\n            {/*                                        setOrderProducts(prevProducts =>*/}\r\n            {/*                                            prevProducts.map(prevProduct =>*/}\r\n            {/*                                                prevProduct.product_id === product.product_id*/}\r\n            {/*                                                    ? {...prevProduct, orderQuantity: quantity}*/}\r\n            {/*                                                    : prevProduct*/}\r\n            {/*                                            )*/}\r\n            {/*                                        );*/}\r\n            {/*                                    }}*/}\r\n            {/*                                />*/}\r\n            {/*                            </td>*/}\r\n            {/*                        </tr>*/}\r\n            {/*                    ))}*/}\r\n            {/*                    </tbody>*/}\r\n            {/*                </table>*/}\r\n\r\n            {/*                <button type=\"button\" onClick={handleOrderSubmit}>*/}\r\n            {/*                    Place Order*/}\r\n            {/*                </button>*/}\r\n            {/*            </form>*/}\r\n            {/*        </div>*/}\r\n            {/*    </div>*/}\r\n            {/*)}*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Inventory;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}