{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\izaan\\\\PhpstormProjects\\\\InventoryManagement\\\\invetory_system_frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport User from \"./components/User\";\nimport LoginPage from \"./components/LoginPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const handleLogin = () => {\n    // Perform your login logic here\n    // For simplicity, let's assume a successful login by setting isLoggedIn to true\n    setLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 42\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"login\",\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            index: true,\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"user\",\n            element: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) :\n        /*#__PURE__*/\n        // Redirect to login page if not logged in\n        _jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"9ogPs/qKjoLSy/tthqIGD5LodSI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Routes","Route","Navbar","Home","User","LoginPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setLoggedIn","useState","handleLogin","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","index","Navigate","to","replace","_c","$RefreshReg$"],"sources":["C:/Users/izaan/PhpstormProjects/InventoryManagement/invetory_system_frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport User from \"./components/User\";\nimport LoginPage from \"./components/LoginPage\"\n\nconst App = () => {\n    const [isLoggedIn, setLoggedIn] = useState(false);\n\n    const handleLogin = () => {\n        // Perform your login logic here\n        // For simplicity, let's assume a successful login by setting isLoggedIn to true\n        setLoggedIn(true);\n    };\n\n    return (\n        <BrowserRouter>\n            <Routes>\n                <Route path=\"/\" element={<Navbar />}>\n                    {/* Public routes */}\n                    <Route path=\"login\" element={<LoginPage onLogin={handleLogin} />} />\n\n                    {/* Protected routes - require authentication */}\n                    {isLoggedIn ? (\n                        <>\n                            <Route index element={<Home />} />\n                            <Route path=\"user\" element={<User />} />\n                        </>\n                    ) : (\n                        // Redirect to login page if not logged in\n                        <Navigate to=\"/login\" replace />\n                    )}\n                </Route>\n            </Routes>\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC/D,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,SAAS,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,UAAU,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB;IACA;IACAF,WAAW,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,oBACIN,OAAA,CAACR,aAAa;IAAAiB,QAAA,eACVT,OAAA,CAACP,MAAM;MAAAgB,QAAA,eACHT,OAAA,CAACN,KAAK;QAACgB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEX,OAAA,CAACL,MAAM;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAAAN,QAAA,gBAEhCT,OAAA,CAACN,KAAK;UAACgB,IAAI,EAAC,OAAO;UAACC,OAAO,eAAEX,OAAA,CAACF,SAAS;YAACkB,OAAO,EAAER;UAAY;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAGnEV,UAAU,gBACPL,OAAA,CAAAE,SAAA;UAAAO,QAAA,gBACIT,OAAA,CAACN,KAAK;YAACuB,KAAK;YAACN,OAAO,eAAEX,OAAA,CAACJ,IAAI;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClCf,OAAA,CAACN,KAAK;YAACgB,IAAI,EAAC,MAAM;YAACC,OAAO,eAAEX,OAAA,CAACH,IAAI;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,eAC1C,CAAC;QAAA;QAEH;QACAf,OAAA,CAACkB,QAAQ;UAACC,EAAE,EAAC,QAAQ;UAACC,OAAO;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAClC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAExB,CAAC;AAACX,EAAA,CA9BID,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAgCT,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}