{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\izaan\\\\PhpstormProjects\\\\InventoryManagement\\\\invetory_system_frontend\\\\src\\\\Components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './Dashboard.css';\nimport { useUser } from '../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  children\n}) => {\n  _s();\n  const {\n    user,\n    logoutUser\n  } = useUser();\n  const navigate = useNavigate();\n  const handleLogout = () => {\n    logoutUser();\n    navigate('/');\n  };\n\n  // Conditionally render the Navbar only if the user is logged in\n  const renderNavbar = user && /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/dashboard\",\n        children: \"Inventory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"nav-links\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dashboard\",\n          children: \"Inventory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dashboard/orders\",\n          children: \"Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dashboard/users\",\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), user && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout-button\",\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [renderNavbar, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"ZxZTHl20JKDcV2v5Q83WGhCVTak=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Link","useNavigate","useUser","jsxDEV","_jsxDEV","Dashboard","children","_s","user","logoutUser","navigate","handleLogout","renderNavbar","className","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/izaan/PhpstormProjects/InventoryManagement/invetory_system_frontend/src/Components/Dashboard.js"],"sourcesContent":["import React from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './Dashboard.css';\r\nimport { useUser } from '../context/UserContext';\r\n\r\nconst Dashboard = ({ children }) => {\r\n    const { user, logoutUser } = useUser();\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogout = () => {\r\n        logoutUser();\r\n        navigate('/');\r\n    };\r\n\r\n    // Conditionally render the Navbar only if the user is logged in\r\n    const renderNavbar = user && (\r\n        <nav className=\"navbar\">\r\n            <div className=\"logo\">\r\n                <Link to=\"/dashboard\">Inventory</Link>\r\n            </div>\r\n            <ul className=\"nav-links\">\r\n                <li>\r\n                    <Link to=\"/dashboard\">Inventory</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/dashboard/orders\">Orders</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/dashboard/users\">Users</Link>\r\n                </li>\r\n            </ul>\r\n            {user && (\r\n                <button className=\"logout-button\" onClick={handleLogout}>\r\n                    Logout\r\n                </button>\r\n            )}\r\n        </nav>\r\n    );\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            {/* Render the Navbar only if the user is logged in */}\r\n            {renderNavbar}\r\n\r\n            <div className=\"content\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}